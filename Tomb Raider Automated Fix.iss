; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define AppName "Tomb Raider Automated Fix"
#define AppVersion "1.0"
#define Game "Tomb Raider I"
[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D4780545-DC3A-4239-A839-B7B1698506D5}
AppName={#AppName}
AppVersion={#AppVersion}
DefaultDirName={code:GetDefaultDir}
DisableProgramGroupPage=yes
DirExistsWarning=no
DisableDirPage=no
AppendDefaultDirName=no
DisableReadyPage=yes
AlwaysShowDirOnReadyPage=yes
CloseApplications=yes
OutputBaseFilename={#AppName} {#AppVersion}
SetupIconFile=TR1.ico
WizardImageFile=TR1_Large.bmp
WizardImageStretch=no
WizardSmallImageFile=TR1_small.bmp
;SetupLogging=yes
Compression=lzma
SolidCompression=yes
Uninstallable=no
PrivilegesRequired=admin

#include <idp.iss>

[Code]
var ProgressPage: TOutputProgressWizardPage;

procedure InitializeWizard;
begin
  idpAddFileSize('https://github.com/Carlmundo/TombRaider-AutomatedFix/releases/download/mirror/Tomb1RetailFix.zip', ExpandConstant('{tmp}\Tomb1RetailFix.zip'), 217163227);
  idpDownloadAfter(wpReady);

  ProgressPage := CreateOutputProgressPage('Installing...','');
end;

function GetDefaultDir(def: string): string;
var InstalledDir : string;
begin
    //Check 32bit registry
    if RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 224960',
     'InstallLocation', InstalledDir) then
    begin
    end
    else if RegQueryStringValue(HKLM32, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 224960',
     'InstallLocation', InstalledDir) then
    begin
    end
    //Check 64bit registry
    else if RegQueryStringValue(HKLM64, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 224960',
     'InstallLocation', InstalledDir) then
    begin
    end  
    Result := InstalledDir;    
end;

function NextButtonClick(PageId: Integer): Boolean;
begin
    Result := True;
    if (PageId = wpSelectDir) and (
    not FileExists(ExpandConstant('{app}\dosbox.exe')))
    then
    begin
        MsgBox('The Steam or GOG version of {#Game} could not be found in that folder. If it is the correct folder, please try reinstalling the game.', mbError, MB_OK);
        Result := False;
        exit;
    end
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
ErrorCode: Integer;
begin
  if CurStep = ssPostInstall then
  begin
      //Start Post Install
      ProgressPage.Show;
      
      ProgressPage.SetProgress(10, 100);
      
      Exec(ExpandConstant('{app}\7z.exe'), ExpandConstant('x -y Tomb1RetailFix.zip'), '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);

      Exec(ExpandConstant('{app}\bin2iso.exe'), ExpandConstant('GAME.DAT'), '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      Exec(ExpandConstant('{app}\7z.exe'), ExpandConstant('x -y game-01.iso -i!DATA\ -xr!LEVEL10C.PHD'), '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      Exec(ExpandConstant('{app}\7z.exe'), ExpandConstant('x -y game-01.iso -i!FMV\'), '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      
      //Remove unneeded folders
      ProgressPage.SetText('Removing unneeded folders...', '');
      ProgressPage.SetProgress(25, 100);
      DelTree(ExpandConstant('{app}\DOCS'), True, True, True); 
      DelTree(ExpandConstant('{app}\FONTS'), True, True, True); 
      DelTree(ExpandConstant('{app}\TOMBRAID'), True, True, True); 
      DelTree(ExpandConstant('{app}\TOOLS'), True, True, True); 

      //Delete files - 7z, bin2iso game-01.iso GAME.DAT GAME.GOG
      DelTree(ExpandConstant('{app}\Tomb1RetailFix.zip'), False, True, False);
      DelTree(ExpandConstant('{app}\7z.exe'), False, True, False);
      DelTree(ExpandConstant('{app}\bin2iso.exe'), False, True, False);
      DelTree(ExpandConstant('{app}\game-01.iso'), False, True, False);
      DelTree(ExpandConstant('{app}\GAME.dat'), False, True, False);
      DelTree(ExpandConstant('{app}\GAME.GOG'), False, True, False);
      
      //Install Visual C++ Runtimes
      ProgressPage.SetText('Installing Visual C++ Redistributables...', '');
      ProgressPage.SetProgress(50, 100);
      
      Exec(ExpandConstant('{app}\VC_Redist x86-x64\vc_redist.x86.exe'), '/silent', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
      Exec(ExpandConstant('{app}\VC_Redist x86-x64\vc_redist.x64.exe'), '/silent', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    
      //End Post Install
      ProgressPage.Hide;

  end;
end;

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Messages]
SetupAppTitle={#AppName} {#AppVersion}
SetupWindowTitle={#AppName} {#AppVersion} 
WelcomeLabel1={#AppName} {#AppVersion} 
WelcomeLabel2=Before continuing, please make sure that you have a clean install of the {#Game} Steam or GOG release.
SelectDirLabel3=Setup will detect where the Steam version of {#Game} has been installed.
SelectDirBrowseLabel=If it has not been detected, click Browse to specify the folder.
FinishedHeadingLabel=Patch Complete

[InstallDelete]
Type: files; Name: "{app}\3dfxSpl2.dll"
Type: files; Name: "{app}\d3dx9.dll"
Type: files; Name: "{app}\dosboxTR.conf"
Type: files; Name: "{app}\glide.log"
Type: files; Name: "{app}\glide.txt"
Type: files; Name: "{app}\glide2x.dll"
Type: files; Name: "{app}\glide2x.ovl"
Type: files; Name: "{app}\glide2x_emu.ovl"
Type: files; Name: "{app}\gogwrap.exe"
Type: files; Name: "{app}\libfluidsynth-1.dll"
Type: files; Name: "{app}\libglib-2.0-0.dll"
Type: files; Name: "{app}\libgthread-2.0-0.dll"
Type: files; Name: "{app}\libphysfs.dll"
Type: files; Name: "{app}\SDL.dll"
Type: files; Name: "{app}\SDL_net.dll"
Type: files; Name: "{app}\TOMBPATH.txt"
Type: files; Name: "{app}\*.mp3"

[Files]
Source: ".\Install\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files